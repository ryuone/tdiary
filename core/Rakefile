require 'rake'
require 'spec/rake/spectask'
require 'cucumber/rake/task'
require 'rake/clean'

CLEAN.include("webrat-*.html", "webrat.log", "coverage.aggregate")
CLOBBER.include("tmp")

namespace :cuke do
	Cucumber::Rake::Task.new(:ok, 'Run features that should pass') do |t|
		t.fork = true
		t.cucumber_opts = "--tags ~@wip --strict --format #{ENV['CUCUMBER_FORMAT']|| 'pretty'} --language ja"
	end

	Cucumber::Rake::Task.new(:wip, 'Run features that are being worked on') do |t|
		t.fork = true
		t.cucumber_opts = "--tags @wip:2 --wip --format #{ENV['CUCUMBER_FORMAT'] || 'pretty'} --language ja"
	end

	desc 'Run all features'
	task :all => [:ok, :wip]

	Cucumber::Rake::Task.new({:rcov => "coverage:clean"}, "Run features(@ok) w/ rcov") do |t|
		t.fork = true
		t.cucumber_opts = "--tags ~@wip --format progress --language ja"
		t.rcov = true
		t.rcov_opts = IO.readlines(File.join('spec', 'rcov.opts')).map {|line| line.chomp.split(" ") }.flatten
		rcov_dir = File.expand_path("coverage/features", File.dirname(__FILE__))
		t.rcov_opts << " -o #{rcov_dir}"
	end
end

desc 'Alias for cuke:ok'
task :cuke => 'cuke:ok'

desc "Run features"
task :features => :cucumber do |t|
	 STDERR.puts "*** The 'features' task is deprecated. See rake -T cucumber ***"
end

namespace :spec do
	desc 'Run specs'
	Spec::Rake::SpecTask.new(:core) do |t|
		t.spec_files = FileList['spec/**/*_spec.rb']
		t.spec_opts << '--options' << File.join('spec', 'spec.opts')
	end

	desc 'Run specs w/ RCov'
	Spec::Rake::SpecTask.new(:rcov) do |t|
		t.spec_files = FileList['spec/**/*_spec.rb']
		t.spec_opts << '--options' << File.join('spec', 'spec.opts')
		t.rcov = true
		t.rcov_dir = File.expand_path("coverage/spec", File.dirname(__FILE__))
		t.rcov_opts = lambda do
			IO.readlines(File.join('spec', 'rcov.opts')).map {|line| line.chomp.split(" ") }.flatten
		end
	end
	task :rcov => "coverage:clean"
end

task :default => :spec

desc "Run spec"
task :spec do |t|
	Rake::Task["spec:core"].invoke
end

namespace :coverage do
	desc "delete aggregate coverage data"
	task(:clean) {
		rm_f "coverage/*"
		mkdir "coverage" unless File.exist? "coverage"
		rm "coverage.aggregate" if File.exist? "coverage.aggregate"
	}
end

desc "all coverage"
task :coverage => ["coverage:clean","spec:rcov", "cuke:rcov"]

desc "generate rdoc files"
task :docs do
	root_dir = File.dirname(__FILE__)

	dirlist = Dir.glob(root_dir + "/rdoc/**/").sort {
		|a,b| b.split('/').size <=> a.split('/').size
	}
	dirlist.each {|d|
		Dir.foreach(d) {|f|
			File::delete(d + f) if !(/\.+$/ =~ f)
		}
		Dir.rmdir(d)
	}

	`cd #{root_dir} && rdoc --all --charset=UTF8 --op=rdoc --inline-source README ChangeLog index.rb update.rb tdiary.rb tdiary/* misc/* plugin/*`
end

# Local Variables:
# mode: ruby
# indent-tabs-mode: t
# tab-width: 3
# ruby-indent-level: 3
# End:
# vim: ts=3
